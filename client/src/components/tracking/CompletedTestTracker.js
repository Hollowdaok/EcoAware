// src/components/tracking/CompletedTestTracker.js
import { useEffect, useRef } from 'react';
import { useAuth } from '../../contexts/AuthContext';

// API URL
const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–π–¥–µ–Ω–∏—Ö —Ç–µ—Å—Ç—ñ–≤
 */
const CompletedTestTracker = ({ 
  testId, 
  title,
  category,
  score,
  correctAnswers,
  totalQuestions
}) => {
  const { isAuthenticated, currentUser } = useAuth();
  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ useRef –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è, —á–∏ –±—É–ª–∞ –≤–∂–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
  const isTrackedRef = useRef(false);
  
  useEffect(() => {
    const trackTestCompletion = async () => {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ç–µ—Å—Ç –±—É–≤ –≤–∂–µ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–∏–π –¥–ª—è —Ü—ñ—î—ó —Å–µ—Å—ñ—ó
      if (isTrackedRef.current) {
        console.log('üîÑ –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–µ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—É:', testId);
        return;
      }
      
      console.log('üîç CompletedTestTracker –≤–∏–∫–ª–∏–∫–∞–Ω–æ –¥–ª—è —Ç–µ—Å—Ç—É:', { testId, title, category, score });
      console.log('üîë –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:', { isAuthenticated, userId: currentUser?.id });
      
      if (!isAuthenticated || !testId) {
        console.log('‚ùå –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è: –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ–π ID —Ç–µ—Å—Ç—É');
        return;
      }
      
      try {
        // –ü–æ–∑–Ω–∞—á–∞—î–º–æ, —â–æ —Ç–µ—Å—Ç —É–∂–µ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–æ, –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é –∑–∞–ø–∏—Ç—É
        isTrackedRef.current = true;
        
        console.log('üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—É:', `${API_URL}/tests/track-completion`);
        const response = await fetch(`${API_URL}/tests/track-completion`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          credentials: 'include',
          body: JSON.stringify({
            testId,
            title,
            category,
            score,
            correctAnswers,
            totalQuestions,
            timestamp: new Date().toISOString() // –î–æ–¥–∞—î–º–æ —á–∞—Å–æ–≤—É –º—ñ—Ç–∫—É –¥–ª—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤
          }),
        });
        
        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(errorData.message || '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è');
        }
        
        const data = await response.json();
        console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ç–µ—Å—Ç—É —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ:', data);
      } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Ç–µ—Å—Ç—É:', error);
      }
    };
    
    trackTestCompletion();
  }, [testId, isAuthenticated, currentUser]); // –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –º—ñ–Ω—ñ–º—ñ–∑–æ–≤–∞–Ω—ñ
  
  return null;
};

export default CompletedTestTracker;